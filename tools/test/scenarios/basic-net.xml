<!--
  ~ Copyright 2015 Open Networking Laboratory
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<scenario name="basic-net" description="Basic network functionality test">
    <group name="Basic-Net">
        <step name="Push-Topos" exec="onos-push-topos ${OCN}"/>

        <step name="Install-Apps"
              exec="onos ${OC1} app activate org.onosproject.openflow org.onosproject.proxyarp org.onosproject.fwd"/>
        <step name="Check-Apps" requires="Install-Apps"
              exec="onos-check-apps ${OC1} drivers,openflow,proxyarp,fwd"/>

        <step name="Wipe-Out-Data" requires="~Check-Apps"
              exec="onos ${OC1} wipe-out please"/>

        <step name="Check-Summary" requires="~Wipe-Out-Data"
              exec="onos-check-summary ${OC1} [0-9]* 0 0 0"/>

        <step name="Start-Mininet" requires="Install-Apps,Check-Summary,Push-Topos"
              exec="onos-mininet start topos/att-onos ${ONOS_INSTANCES}"/>

        <step name="Wait-For-Mininet" requires="Install-Apps,Check-Summary"
              exec="onos-mininet wait 15"/>

        <step name="Check-Summary-Again" requires="Wait-For-Mininet"
              exec="onos-check-summary ${OC1} [0-9]* 25 112 0"/>

        <step name="Config-Topo" requires="Check-Summary-Again"
              exec="onos-topo-cfg ${OC1} ${ONOS_ROOT}/tools/test/topos/attmpls.json"/>

        <step name="Check-Summary-Yet-Again" requires="~Config-Topo"
              exec="onos-check-summary ${OC1} [0-9]* 25 112 25"/>

        <step name="Ping-All" requires="Wait-For-Mininet,~Check-Summary-Again"
              exec="onos-mininet send py net.pingAll(1)"/>

        <step name="Verify-Ping-All" requires="~Ping-All"
              exec="onos-mininet expect Results: .* dropped"/>

        <step name="Stop-Mininet" requires="~Verify-Ping-All"
              exec="onos-mininet stop"/>
    </group>
</scenario>